version: "3.7"
services:

  app:
    build:
      args:
        user: sammy
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - laravel

  db:
    image: mysql:8.0.23
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
#      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: db
    volumes:
      - ./docker-compose/mysql:/docker-entrypoint-initdb.d
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    depends_on:
      - db
    restart: always
    environment:
      PMA_HOST: ${DB_HOST}
      PMA_PORT: ${DB_PORT}
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
      PMA_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8899:80"
    networks:
      - laravel


  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - 8000:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ecom.rule=Host(`test.web-assembled.nl`)"
      - "traefik.http.routers.ecom.entrypoints=web"

#      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

#      - "traefik.enable=true"
#      - "traefik.http.routers.ecom.rule=Host(`nginx.localhost`)"
#      - "traefik.http.routers.nginx.entrypoints=web"
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - laravel

  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    # Enables the web UI and tells Traefik to listen to docker
#    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      - "4000:4000"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.node.address=:4000"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=deveron.reniers@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
#    ports:
#      - "80:80"
#      - "8080:8080"
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"

#  whoami:
#    image: "traefik/whoami"
#    container_name: "simple-service"
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
#      - "traefik.http.routers.whoami.entrypoints=web"

networks:
  laravel:
    driver: bridge

#end

#version: '3'
#
#networks:
#  laravel:
#
#services:
#  nginx:
#    image: nginx:stable-alpine
#    container_name: nginx
#    ports:
#      - "8088:80"
#    volumes:
#      - ./src:/var/www/html
#      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#      - ./nginx/certs:/etc/nginx/certs
#    depends_on:
#      - php
#      - mysql
#    networks:
#      - laravel
#
#  mysql:
#    image: mysql:8.0.23
#    container_name: mysql
#    restart: unless-stopped
#    tty: true
#    ports:
#      - "4306:3306"
#    volumes:
#      - ./mysql:/var/lib/mysql
#    environment:
#      MYSQL_DATABASE: homestead
#      MYSQL_USER: homestead
#      MYSQL_PASSWORD: secrect
#      MYSQL_ROOT_PASSWORD: secrect
#      SERVICE_TAGS: dev
#      SERICCE_NAME: mysql
#    networks:
#      - laravel
#
#  phpmyadmin:
#    image: phpmyadmin/phpmyadmin:latest
#    container_name: phpmyadmin
#    depends_on:
#      - mysql
#    restart: always
#    environment:
#      - PMA_HOST=mysql
#      - PMA_PORT= 3306
##      PMA_USER: homestead
##      PMA_PASSWORD: secrect
#    ports:
#      - "8899:80"
#    networks:
#        - laravel
#

#
#    # todo ssl certificaat installeren en auto renewal
#    # todo testen of redis werkt
#
#  redis:
#    image: "redis:alpine"
#    container_name: redis
#    networks:
#      - laravel
#
#  speedtest:
#    container_name: speedtest
#    image: henrywhitaker3/speedtest-tracker
#    ports:
#      - 8765:80
#    volumes:
#      - /path/to/data:/config
#    environment:
#      - TZ=
#      - PGID=
#      - PUID=
#      - OOKLA_EULA_GDPR=true
#    logging:
#      driver: "json-file"
#      options:
#        max-file: "10"
#        max-size: "200k"
#    restart: unless-stopped
#
#  php:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: php
#    volumes:
#      - ./src:/var/www/html
#    ports:
#      - "9000:9000"
#    networks:
#      - laravel

